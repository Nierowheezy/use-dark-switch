name: Node.js CI

on:
  push:
    branches:
      - main # Trigger action on pushes to the main branch
  pull_request:
    branches:
      - main # Trigger action on PRs targeting the main branch
  release:
    types: [created] # Optional: trigger on new releases if you prefer using GitHub releases directly

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Specify your Node.js version, e.g., 16, 18, etc.

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # Step 4: Run tests
      - name: Run tests
        run: npm test

      # Step 5: Build project (optional, if your project requires it)
      - name: Build project
        run: npm run build

      # Step 6: Lint the code (optional)
      - name: Lint code
        run: npm run lint

      # Step 7: Create a new version tag (automatically increment version)
      - name: Create a new version tag
        run: |
          npm version patch -m "Bump version to %s" # Change patch to minor or major as needed

      # Step 8: Push the changes and tags to GitHub
      - name: Push changes and tags
        run: |
          git push origin main
          git push origin --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 9: Create a GitHub release
      - name: Create GitHub Release
        run: |
          TAG_NAME=$(git describe --tags)
          RELEASE_NAME="Release $TAG_NAME"
          RELEASE_BODY="Release notes for $TAG_NAME"
          gh release create $TAG_NAME dist/* --title "$RELEASE_NAME" --notes "$RELEASE_BODY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
